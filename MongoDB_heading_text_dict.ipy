'''
The heading-text-dictionary function takes the text of a transcript
and makes a dictionary with the headings as keys and the associated
text as values.
'''

import re
from bson.son import SON

#db = client.xyz
training_collection = client.graham.training_data

heading_regex = re.compile('[A-Z]{1}[A-Z \-]+[A-Z]{1}(?=:| {2}|\r)', re.MULTILINE)


def nhtd(transcription_id):
        transcription_text=training_collection.find_one(transcription_id)["text"]
        headings1=heading_regex.findall(transcription_text)
        headings_list=[]
        for x in headings1:
                headings_list.append(x)
        #return headings_list
        texts1=heading_regex.split(transcription_text)
        if len(texts1) > len(headings_list):
                headings_list.insert(0,'dummy heading')
        transcription_dict={}
        for t,h in zip(texts1,headings_list):
                transcription_dict.setdefault(h,[]).append(t)
        #transcription_dict=dict(zip(headings_list,texts1))
        for k in transcription_dict:
                transcription_dict[k]=''.join(transcription_dict[k])
        return transcription_dict
        #return len(texts1), len(headings1)
